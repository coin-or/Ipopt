These directories contain the Visual Studio version of Ipopt.  They
have been created with Microsoft Visual C++ .NET 2003 and Intel
Fortran 8.0.

Before opening the files in your Visual Studio, first make sure that
the following third party source files are present (after you got them
from netlib and Harwell):

Extern/HSL/ma27ad.f
Extern/HSL/mc19ad.f

Extern/blas/dasum.f
Extern/blas/daxpy.f
Extern/blas/dcopy.f
Extern/blas/ddot.f
Extern/blas/dgemm.f
Extern/blas/dgemv.f
Extern/blas/dger.f
Extern/blas/dnrm2.f
Extern/blas/dscal.f
Extern/blas/dswap.f
Extern/blas/dsymv.f
Extern/blas/dsyr2.f
Extern/blas/dsyr2k.f
Extern/blas/dsyrk.f
Extern/blas/dtrmm.f
Extern/blas/dtrmv.f
Extern/blas/dtrsm.f
Extern/blas/idamax.f
Extern/blas/lsame.f
Extern/blas/xerbla.f

Extern/lapack/dlae2.f
Extern/lapack/dlaev2.f
Extern/lapack/dlamch.f
Extern/lapack/dlanst.f
Extern/lapack/dlansy.f
Extern/lapack/dlapy2.f
Extern/lapack/dlarf.f
Extern/lapack/dlarfb.f
Extern/lapack/dlarfg.f
Extern/lapack/dlarft.f
Extern/lapack/dlartg.f
Extern/lapack/dlascl.f
Extern/lapack/dlaset.f
Extern/lapack/dlasr.f
Extern/lapack/dlasrt.f
Extern/lapack/dlassq.f
Extern/lapack/dlatrd.f
Extern/lapack/dorg2l.f
Extern/lapack/dorg2r.f
Extern/lapack/dorgql.f
Extern/lapack/dorgqr.f
Extern/lapack/dorgtr.f
Extern/lapack/dpotf2.f
Extern/lapack/dpotrf.f
Extern/lapack/dpotrs.f
Extern/lapack/dsteqr.f
Extern/lapack/dsterf.f
Extern/lapack/dsyev.f
Extern/lapack/dsytd2.f
Extern/lapack/dsytrd.f
Extern/lapack/ieeeck.f
Extern/lapack/ilaenv.f

Then open the solution file

Windows/VisualStudio_dotNET/Ipopt/Ipopt.sln

This solution compiles all examples coming with the Ipopt
distribution. You should be able to base your development on one of
these examples.


Here are some helpful notes if you are building a new C++ project.
- The project type used for the example was "Win32 Console" (Not .NET Console!)

- Precompiled headers were turned off:
        Project Properties | C/C++ | Precompiled-Headers |
          Create/Use Precompiled Headers = "Not Using Precompiled Headers"

- You will need to add the include directories to your C++ project
        you can copy these from the Ipopt project:
        Project Properties | C/C++ | General |
          Additional Include Directories = <copy from Ipopt>

- You must ensure that the run-time libraries between FortranLinAlg
        and the C++ project are compatible. Look at the "Mixed
        Language" area of the Intel Fortran compiler html help for a
        table of compatible settings (look for something about
        consistent run-time libraries in help)

        These are set by:
        1) for the C++ project
           Project Properties | C/C++ | Code Generation |
              Runtime Library
        2) for the Fortran project
           FortranLinAlg Properties | Fortran | Libraries | Runtime Library

- You must add the Fortran compiler LIB path to the C++ project
  This is something like "C:\Program Files\Intel\Fortran\compiler80\IA32\LIB":
     Project Properties | Linker | General |
        Additional Library Directories = <LIB path>
		
