language: cpp

matrix:
  include:
    - os: linux
      addons:
        apt:
          packages:
            - gfortran
            - liblapack-dev
            - libmetis-dev
      env: ENABLEDEBUG=true
    - os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - gfortran
            - liblapack-dev
            - libmetis-dev
      env: VISHIDDEN=true
    - os: osx
      osx_image: xcode11.3
      env: OSX=10.14 VISHIDDEN=true
      compiler: clang
    - os: osx
      osx_image: xcode11
      env: OSX=10.14 VISHIDDEN=true NOF77=true
      compiler: clang
    - os: osx
      osx_image: xcode10.1
      env: OSX=10.13 ENABLEDEBUG=true
      compiler: clang
    - os: osx
      osx_image: xcode9.4
      env: OSX=10.13
      compiler: clang

before_script:
  - export VISHIDDEN=${VISHIDDEN:-false}
  - export NOF77=${NOF77:-false}
  - export ENABLEDEBUG=${ENABLEDEBUG:-false}
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]] && ! $NOF77; then brew update; brew install bash gcc metis; export CC=gcc-9 ; export CXX=g++-9 ; $CC --version; $CXX --version; gfortran --version; fi

script:
  - git clone --depth 1 https://github.com/coin-or-tools/ThirdParty-ASL
  - pushd ThirdParty-ASL && ./get.ASL && ./configure --prefix=$HOME/install && make && make install && popd
  - if $NOF77 ; then echo "Skipping Mumps build." ; else git clone --depth 1 https://github.com/coin-or-tools/ThirdParty-Mumps ; pushd ThirdParty-Mumps && ./get.Mumps && ./configure --prefix=$HOME/install && make && make install && popd ; fi
  - mkdir build
  - pushd build
  - export ADD_CFLAGS="-Wall -Wextra -Werror"
  - export ADD_CXXFLAGS="-Wall -Wextra -Werror"
  - if $VISHIDDEN ; then ADD_CFLAGS="$ADD_CFLAGS -fvisibility=hidden" ; fi
  - if $VISHIDDEN ; then ADD_CXXFLAGS="$ADD_CXXFLAGS -fvisibility=hidden" ; fi
  - export CFGFLAGS=""
  - if $NOF77 ; then CFGFLAGS="$CFGFLAGS --disable-f77" ; fi
  - if $ENABLEDEBUG ; then CFGFLAGS="$CFGFLAGS --enable-debug --with-ipopt-checklevel=5 --with-ipopt-verbosity=5" ; fi
  - ../configure --prefix=$HOME/install $CFGFLAGS
  - make
  - if $NOF77 ; then echo "skip test as no linear solver" ; else make test ; fi
  - make install
  - pushd examples/Cpp_example
  - make
  - if ! $NOF77 ; then ./cpp_example ; fi
  - popd
  - pushd examples/hs071_c
  - make
  - if ! $NOF77 ; then ./hs071_c ; fi
  - popd
  - pushd examples/hs071_cpp
  - make
  - if ! $NOF77 ; then ./hs071_cpp ; fi
  - popd
  - if ! $NOF77 ; then pushd examples/hs071_f && make && ./hs071_f && popd ; fi
  - pushd examples/ScalableProblems
  - make
  - if ! $NOF77 ; then ./solve_problem MBndryCntrl1 10 ; fi
  - popd
  - pushd examples/recursive_nlp
  - make
  - if ! $NOF77 ; then ./recursive_nlp ; fi
  - popd

after_failure:
  - find . -name config.log -exec tail -n 1000 {} \;
